# Generated by Django 5.2.1 on 2025-07-07 11:31

from django.db import migrations


def backfill_revision_metadata(apps, schema_editor):
    """
    Copies metadata from the parent Secret to all existing SecretRevisions.
    """
    SecretRevision = apps.get_model('secrets', 'SecretRevision')

    # Loop through every revision that exists before this change
    for revision in SecretRevision.objects.all():
        # Get the parent secret object
        secret = revision.secret

        # Copy the data from the parent secret to the revision
        revision.name = secret.name
        revision.description = secret.description
        revision.username = secret.username
        revision.url = secret.url
        revision.filename = secret.filename
        revision.access_policy = secret.access_policy
        revision.needs_changing_on_leave = secret.needs_changing_on_leave
        revision.status = secret.status
        
        # Save the updated revision object
        revision.save(
            update_fields=[
                'name', 'description', 'username', 'url', 'filename',
                'access_policy', 'needs_changing_on_leave', 'status'
            ]
        )

class Migration(migrations.Migration):

    dependencies = [
        ('secrets', '0038_secretrevision_access_policy_and_more'),
    ]

    operations = [
        migrations.RunPython(backfill_revision_metadata),
    ]

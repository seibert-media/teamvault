[build-system]
requires = ["uv_build>=0.6,<0.7"]
build-backend = "uv_build"

[project]
name = "teamvault"
description = "Keep your passwords behind the firewall"
readme = "README.md"
license-files = ["LICENSE"]
authors = [{ name = "Seibert Group GmbH" }]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business",
    "Topic :: Security",
]
keywords = ["password", "safe", "manager", "sharing"]
dependencies = [
    "cryptography~=45.0.2",
    "django-auth-ldap~=5.2.0",
    "django-bootstrap5==25.1",
    "django-filter==25.1",
    "django-htmx~=1.23.0",
    "django-test-migrations>=1.5.0",
    "django-webpack-loader~=3.2.0",
    "django~=5.2.1",
    "djangorestframework~=3.16.0",
    "gunicorn~=23.0.0",
    "hashids~=1.3.1",
    "pyotp~=2.9",
    "huey~=2.5.3",
    "psycopg~=3.2.9",
    "pytz~=2025.2",
    "requests~=2.32",
    "social-auth-app-django~=5.4.3",
    "whitenoise[brotli]~=6.9.0",
]

# dynamic = ["version"] - Currently unsupported by uv_build
version = '0.10.1'  # Also change in teamvault/__version__.py

[dependency-groups]
dev = [
    "django-stubs~=5.2.0",
    "djangorestframework-stubs~=3.16.0",
    "faker",
    "ruff>=0.12.2",
]

[project.scripts]
teamvault = "teamvault.cli:main"

[project.urls]
Source = "https://github.com/seibert-media/teamvault"

[tool.uv]
package = true

[tool.uv.build-backend]
module-root = ""
source-include = [
    "CHANGELOG.md",
    "MANIFEST.in",
]

[tool.uv.sources]
teamvault = { workspace = true }

[tool.ruff]
src = ["teamvault"]
target-version = "py312"
line-length = 120
indent-width = 4
extend-exclude = [
    "./teamvault/apps/*/migrations"
]

[tool.ruff.format]
# Like Black, use single quotes for strings.
quote-style = "single"

[tool.ruff.lint]
select = [
    # Note: Preferably, we'd use the deactivated rules below, too. Once there's time, let's try to fix them one by one.
    #
    "ARG",   # flake8-unused-arguments - when enabling, make sure you keep the same signature of parent methods
    "B",       # flake8-bugbear
    "C4",      # flake8-comprehensions
    "DJ",      # flake-django
    "E",       # pycodestyle errors
    "F",       # pyflakes
    "G",     # flake8-logging-format
    "FURB",  # refurb  - depends on enabled preview option
    "I",       # isort
    "INT",     # flake8-gettext
    "ISC",     # flake8-implicit-str-concat
    "PERF",    # perflint
    "PLE",     # pylint errors
    "PLR0",  # pylint refactor errors
    "PTH",   # flake8-use-pathlib
    "RUF100",  # ruff / unused-noqa
    "SIM",   # flake8-simplify
    "TCH",     # flake8-type-checking
    "UP",      # pyupgrade
    "W",       # pycodestyle warnings
]
ignore = [
    "DJ008",   # django-model-without-dunder-str - Often, we don't care about these
    "PERF401", # manual-list-comprehension - Forcing us to use list comprehensions with dicts inside them is weird.
    "UP015",   # redundant-open-modes - We like to have the mode explicitly set in open() calls
]

[tool.ruff.lint.isort]
combine-as-imports = true
no-lines-before = ["local-folder"]
relative-imports-order = "closest-to-furthest"

[tool.ruff.lint.mccabe]
max-complexity = 13

[tool.ruff.lint.pylint]
max-args = 15  # default is 5
max-branches = 28  # default is 12
max-returns = 13  # default is 6
max-statements = 134  # default is 50

#!/bin/bash
set -xe

. /tvenv/bin/activate
# Optional: Umgebungsvariable fÃ¼r die Konfigurationsdatei setzen, falls nicht vorhanden
export TEAMVAULT_CONFIG_FILE=/etc/teamvault.conf

# Wait until PostgreSQL is ready.

echo "Waiting for PostgreSQL to become available."
(
    export PGPASSWORD=teamvault

    for i in $(seq 60)
    do
        if psql -h psql -U teamvault -c 'select 1;'
        then
            exit 0
        fi
        sleep 1
    done

    echo Database won\'t boot. Giving up. >&2
    exit 1
) || exit 1


if ! test -e "$TEAMVAULT_CONFIG_FILE"
then
    teamvault setup
    sed -i 's/^base_url = .*$/base_url = http:\/\/127.0.0.1:8000/' \
        "$TEAMVAULT_CONFIG_FILE"
    sed -i 's/^host = .*$/host = psql/' \
        "$TEAMVAULT_CONFIG_FILE"
fi

echo "Running DB Migration"
python3 /teamvault/teamvault/manage.py migrate

echo "Checking if superuser exists..."
if ! python /teamvault/teamvault/manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); exit(0) if User.objects.filter(username='admin').exists() else exit(1)"
then
    echo "Creating superuser..."
    python /teamvault/teamvault/manage.py createsuperuser \
        --no-input \
        --username teamvault \
        --email teamvault@example.com

    echo "Setting password..."
    python /teamvault/teamvault/manage.py shell -c "from django.contrib.auth import get_user_model; \
User = get_user_model(); \
u = User.objects.get(username='teamvault'); \
u.set_password('teamvault'); \
u.save()"
else
    echo "Superuser already exists."
fi
#Copying static files
echo "Copying static files"
python /teamvault/teamvault/manage.py collectstatic --no-input

# Start TeamVault
echo "Starting teamvault run"
exec teamvault run --bind 0.0.0.0:8000